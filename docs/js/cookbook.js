// Generated by Haxe 4.0.5
(function ($hx_exports, $global) { "use strict";
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var Main = $hx_exports["Main"] = function() { };
Main.main = function() {
	Main.full_nav = window.document.getElementById("full_nav");
	Main.small_nav = window.document.getElementById("small_nav");
	Main.content = window.document.getElementById("content");
	Main.head = window.document.getElementById("head");
	Main.body = window.document.getElementById("body");
	if(window.location.search.length > 0) {
		util_HrefTools.fetch("repo/" + HxOverrides.substr(window.location.search,1,null) + ".md",Main.parse_recipe);
	} else {
		Main.make_index();
	}
};
Main.make_index = function() {
	Main.full_nav.classList.add("index");
	Main.full_nav.innerHTML = "<h1>Cookbook</h1>";
	Main.small_nav.innerHTML = "<h1>Cookbook</h1>";
	Main.set_head_bg("images/index_bg.png");
	util_HrefTools.fetch("repo/index.md",Main.make_contents);
};
Main.make_contents = function(index) {
	util_ElementTools.clear(Main.content);
	var div = window.document.createElement("div");
	div.classList.add("page");
	div.innerHTML = marked(index);
	Main.content.appendChild(div);
	var _g = 0;
	var _g1 = div.getElementsByTagName("a");
	while(_g < _g1.length) {
		var link = _g1[_g];
		++_g;
		var href = [link.href.split("/").pop()];
		link.removeAttribute("href");
		link.onclick = (function(href1) {
			return function() {
				util_HrefTools.fetch("repo/" + href1[0] + ".md",Main.parse_recipe);
				return;
			};
		})(href);
	}
};
Main.parse_recipe = function(recipe) {
	var pages = recipe.split("---");
	var header = pages.shift().split("\n");
	var recipe1 = { title : header[0], author : header[1], image : header[2], pages : []};
	var _g = 0;
	while(_g < pages.length) recipe1.pages.push(Main.parse_page(pages[_g++]));
	Main.recipe = recipe1;
	Main.display_recipe();
};
Main.parse_page = function(page) {
	var out = { title : "", text : ""};
	var lines = page.split("\n");
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		if(line.indexOf("#") == 0) {
			out.title = HxOverrides.substr(line,2,null);
			break;
		}
	}
	while(StringTools.trim(lines[0]).length == 0) lines.shift();
	while(StringTools.trim(lines[lines.length - 1]).length == 0) lines.pop();
	if(out.title.length == 0) {
		out.title = lines[0];
	}
	out.text = lines.join("\n");
	return out;
};
Main.display_recipe = function() {
	util_ElementTools.clear(Main.full_nav);
	util_ElementTools.clear(Main.small_nav);
	Main.set_nav();
	Main.display_page(0);
};
Main.set_nav = function() {
	Main.set_head_bg(Main.recipe.image);
	Main.set_full_nav();
	Main.set_small_nav();
};
Main.set_full_nav = function() {
	Main.full_nav.classList.remove("index");
	var content = window.document.createElement("div");
	var home = window.document.createElement("img");
	home.src = "images/icon_home.png";
	home.onclick = function() {
		Main.make_index();
		return;
	};
	var title = window.document.createElement("h1");
	title.classList.add("no_top_margin");
	title.classList.add("no_bottom_margin");
	title.innerText = Main.recipe.title;
	var author = window.document.createElement("h3");
	author.classList.add("no_top_margin");
	author.innerText = Main.recipe.author;
	var list = window.document.createElement("ul");
	var _g = 0;
	var _g1 = Main.recipe.pages.length;
	while(_g < _g1) {
		var i = [_g++];
		var li = window.document.createElement("li");
		li.onclick = (function(i1) {
			return function() {
				Main.display_page(i1[0]);
				return;
			};
		})(i);
		li.innerText = Main.recipe.pages[i[0]].title;
		list.appendChild(li);
	}
	content.appendChild(home);
	content.appendChild(title);
	content.appendChild(author);
	content.appendChild(list);
	Main.full_nav.appendChild(content);
};
Main.set_small_nav = function() {
	var home = window.document.createElement("img");
	var prev = window.document.createElement("img");
	var next = window.document.createElement("img");
	prev.classList.add("prev");
	next.classList.add("next");
	home.onclick = function() {
		Main.make_index();
		return;
	};
	prev.onclick = function() {
		Main.prev_page();
		return;
	};
	next.onclick = function() {
		Main.next_page();
		return;
	};
	home.src = "images/icon_home.png";
	prev.src = "images/icon_prev.png";
	next.src = "images/icon_next.png";
	Main.small_nav.appendChild(home);
	Main.small_nav.appendChild(prev);
	Main.small_nav.appendChild(next);
};
Main.display_page = function(page) {
	window.scrollTo(0,0);
	Main.page_index = page;
	var list = Main.full_nav.getElementsByTagName("li");
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) list[_g++].classList.remove("selected");
	list[page].classList.add("selected");
	util_ElementTools.clear(Main.content);
	var div = window.document.createElement("div");
	div.innerHTML = marked(Main.recipe.pages[page].text);
	div.classList.add("page");
	Main.content.appendChild(div);
	Main.content.appendChild(Main.make_page_nav());
	var _g2 = 0;
	var _g3 = window.document.getElementsByClassName("prev");
	while(_g2 < _g3.length) {
		var el = _g3[_g2];
		++_g2;
		if(page == 0) {
			el.classList.add("hide");
		} else {
			el.classList.remove("hide");
		}
	}
	var _g4 = 0;
	var _g5 = window.document.getElementsByClassName("next");
	while(_g4 < _g5.length) {
		var el1 = _g5[_g4];
		++_g4;
		if(page == Main.recipe.pages.length - 1) {
			el1.classList.add("hide");
		} else {
			el1.classList.remove("hide");
		}
	}
};
Main.set_head_bg = function(image) {
	if(image.length == 0) {
		return;
	}
	Main.head.style.backgroundImage = "url(" + image + ")";
};
Main.prev_page = function() {
	if(Main.page_index == 0) {
		return;
	}
	Main.display_page(Main.page_index - 1);
};
Main.next_page = function() {
	if(Main.page_index == Main.recipe.pages.length - 1) {
		return;
	}
	Main.display_page(Main.page_index + 1);
};
Main.make_page_nav = function() {
	var out = window.document.createElement("div");
	out.classList.add("page_nav");
	var prev = window.document.createElement("img");
	var next = window.document.createElement("img");
	prev.classList.add("prev");
	next.classList.add("next");
	prev.onclick = function() {
		Main.prev_page();
		return;
	};
	next.onclick = function() {
		Main.next_page();
		return;
	};
	prev.src = "images/icon_prev.png";
	next.src = "images/icon_next.png";
	out.appendChild(prev);
	out.appendChild(next);
	return out;
};
var StringTools = function() { };
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var util_ElementTools = function() { };
util_ElementTools.clear = function(e) {
	var _g = 0;
	var _g1 = e.children;
	while(_g < _g1.length) _g1[_g++].remove();
	e.innerHTML = "";
};
var util_HrefTools = function() { };
util_HrefTools.fetch = function(href,then) {
	var request = new XMLHttpRequest();
	request.open("GET",href,true);
	request.onload = function(e) {
		then(request.response);
		return;
	};
	request.onerror = function(e1) {
		console.log("src/util/HrefTools.hx:10:",e1);
		return;
	};
	request.send();
};
Main.page_index = 0;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
